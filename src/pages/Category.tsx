import { useParams } from "react-router-dom";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import { Button } from "@/components/ui/button";
import { Slider } from "@/components/ui/slider";
import { Checkbox } from "@/components/ui/checkbox";
import { Separator } from "@/components/ui/separator";
import { 
  Select, 
  SelectContent, 
  SelectItem, 
  SelectTrigger, 
  SelectValue 
} from "@/components/ui/select";

// –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
const categoryData = {
  vegetables: {
    name: "–û–≤–æ—â–∏",
    icon: "ü•ï",
    description: "–°–≤–µ–∂–∏–µ —Å–µ–∑–æ–Ω–Ω—ã–µ –æ–≤–æ—â–∏ –æ—Ç –º–µ—Å—Ç–Ω—ã—Ö —Ñ–µ—Ä–º–µ—Ä–æ–≤",
    products: [
      { id: 1, name: "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å –¥–µ—Ä–µ–≤–µ–Ω—Å–∫–∏–π", farmer: "–§–µ—Ä–º–∞ –ò–≤–∞–Ω–æ–≤—ã—Ö", price: 89, weight: "1 –∫–≥", image: "/placeholder.svg" },
      { id: 2, name: "–ü–æ–º–∏–¥–æ—Ä—ã —á–µ—Ä—Ä–∏", farmer: "–≠–∫–æ-—Ñ–µ—Ä–º–∞ '–ó–∞—Ä—è'", price: 210, weight: "500 –≥", image: "/placeholder.svg" },
      { id: 3, name: "–û–≥—É—Ä—Ü—ã —Ç–µ–ø–ª–∏—á–Ω—ã–µ", farmer: "–§–µ—Ä–º–∞ '–ó–µ–ª–µ–Ω—ã–π –¥–æ–ª'", price: 150, weight: "1 –∫–≥", image: "/placeholder.svg" },
      { id: 4, name: "–ú–æ—Ä–∫–æ–≤—å –º–æ–ª–æ–¥–∞—è", farmer: "–û—Ä–≥–∞–Ω–∏–∫ –§–∞—Ä–º", price: 95, weight: "1 –∫–≥", image: "/placeholder.svg" },
      { id: 5, name: "–ö–∞–ø—É—Å—Ç–∞ –±–µ–ª–æ–∫–æ—á–∞–Ω–Ω–∞—è", farmer: "–§–µ—Ä–º–∞ –ò–≤–∞–Ω–æ–≤—ã—Ö", price: 76, weight: "1 –∫–≥", image: "/placeholder.svg" },
      { id: 6, name: "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", farmer: "–≠–∫–æ-—Ñ–µ—Ä–º–∞ '–ó–∞—Ä—è'", price: 65, weight: "1 –∫–≥", image: "/placeholder.svg" },
    ]
  },
  fruits: {
    name: "–§—Ä—É–∫—Ç—ã",
    icon: "üçé",
    description: "–°–æ—á–Ω—ã–µ —Ñ—Ä—É–∫—Ç—ã, –≤—ã—Ä–∞—â–µ–Ω–Ω—ã–µ —Å –∑–∞–±–æ—Ç–æ–π –æ –ø—Ä–∏—Ä–æ–¥–µ",
    products: [
      { id: 7, name: "–Ø–±–ª–æ–∫–∏ –∞–Ω—Ç–æ–Ω–æ–≤–∫–∞", farmer: "–§—Ä—É–∫—Ç–æ–≤—ã–π —Å–∞–¥", price: 120, weight: "1 –∫–≥", image: "/placeholder.svg" },
      { id: 8, name: "–ì—Ä—É—à–∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü", farmer: "–≠–∫–æ-—Ñ–µ—Ä–º–∞ '–ó–∞—Ä—è'", price: 235, weight: "1 –∫–≥", image: "/placeholder.svg" },
      { id: 9, name: "–°–ª–∏–≤—ã –¥–æ–º–∞—à–Ω–∏–µ", farmer: "–û—Ä–≥–∞–Ω–∏–∫ –§–∞—Ä–º", price: 180, weight: "500 –≥", image: "/placeholder.svg" },
    ]
  },
  dairy: {
    name: "–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã",
    icon: "ü•õ",
    description: "–ù–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è –º–æ–ª–æ—á–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è –æ—Ç —Ñ–µ—Ä–º–µ—Ä—Å–∫–∏—Ö —Ö–æ–∑—è–π—Å—Ç–≤",
    products: [
      { id: 10, name: "–ú–æ–ª–æ–∫–æ —Ñ–µ—Ä–º–µ—Ä—Å–∫–æ–µ", farmer: "–§–µ—Ä–º–∞ '–ó–µ–ª–µ–Ω—ã–π –¥–æ–ª'", price: 110, weight: "1 –ª", image: "/placeholder.svg" },
      { id: 11, name: "–¢–≤–æ—Ä–æ–≥ –¥–æ–º–∞—à–Ω–∏–π", farmer: "–§–µ—Ä–º–∞ –ò–≤–∞–Ω–æ–≤—ã—Ö", price: 165, weight: "300 –≥", image: "/placeholder.svg" },
      { id: 12, name: "–°—ã—Ä –∞–¥—ã–≥–µ–π—Å–∫–∏–π", farmer: "–û—Ä–≥–∞–Ω–∏–∫ –§–∞—Ä–º", price: 320, weight: "300 –≥", image: "/placeholder.svg" },
    ]
  },
  meat: {
    name: "–ú—è—Å–æ",
    icon: "ü•©",
    description: "–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç–æ–µ –º—è—Å–æ –æ—Ç —Ñ–µ—Ä–º–µ—Ä–æ–≤",
    products: [
      { id: 13, name: "–ì–æ–≤—è–¥–∏–Ω–∞ —Ñ–µ—Ä–º–µ—Ä—Å–∫–∞—è", farmer: "–§–µ—Ä–º–∞ '–ó–µ–ª–µ–Ω—ã–π –¥–æ–ª'", price: 650, weight: "1 –∫–≥", image: "/placeholder.svg" },
      { id: 14, name: "–ö—É—Ä–∏—Ü–∞ –¥–æ–º–∞—à–Ω—è—è", farmer: "–≠–∫–æ-—Ñ–µ—Ä–º–∞ '–ó–∞—Ä—è'", price: 420, weight: "1 –∫–≥", image: "/placeholder.svg" },
      { id: 15, name: "–ò–Ω–¥–µ–π–∫–∞ —Ñ–µ—Ä–º–µ—Ä—Å–∫–∞—è", farmer: "–§–µ—Ä–º–∞ –ò–≤–∞–Ω–æ–≤—ã—Ö", price: 580, weight: "1 –∫–≥", image: "/placeholder.svg" },
    ]
  },
  bakery: {
    name: "–í—ã–ø–µ—á–∫–∞",
    icon: "üçû",
    description: "–î–æ–º–∞—à–Ω—è—è –≤—ã–ø–µ—á–∫–∞ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤",
    products: [
      { id: 16, name: "–•–ª–µ–± —Ä–∂–∞–Ω–æ–π", farmer: "–ü–µ–∫–∞—Ä–Ω—è '–ö–æ–ª–æ—Å–æ–∫'", price: 85, weight: "500 –≥", image: "/placeholder.svg" },
      { id: 17, name: "–ë—É–ª–æ—á–∫–∏ —Å –∫–æ—Ä–∏—Ü–µ–π", farmer: "–î–æ–º–∞—à–Ω—è—è –ø–µ–∫–∞—Ä–Ω—è", price: 120, weight: "4 —à—Ç", image: "/placeholder.svg" },
      { id: 18, name: "–ü–∏—Ä–æ–≥ —Å —è–±–ª–æ–∫–∞–º–∏", farmer: "–ü–µ–∫–∞—Ä–Ω—è '–ö–æ–ª–æ—Å–æ–∫'", price: 350, weight: "1 —à—Ç", image: "/placeholder.svg" },
    ]
  },
  honey: {
    name: "–ú—ë–¥",
    icon: "üçØ",
    description: "–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –ø—á–µ–ª–∏–Ω—ã–π –º—ë–¥ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ—Ä—Ç–æ–≤",
    products: [
      { id: 19, name: "–ú—ë–¥ –ª–∏–ø–æ–≤—ã–π", farmer: "–ü–∞—Å–µ–∫–∞ '–ú–µ–¥–æ–≤—ã–π —Ä–∞–π'", price: 450, weight: "500 –≥", image: "/placeholder.svg" },
      { id: 20, name: "–ú—ë–¥ –≥—Ä–µ—á–∏—à–Ω—ã–π", farmer: "–ü–∞—Å–µ–∫–∞ –ü–µ—Ç—Ä–æ–≤—ã—Ö", price: 380, weight: "500 –≥", image: "/placeholder.svg" },
      { id: 21, name: "–ú—ë–¥ —Ä–∞–∑–Ω–æ—Ç—Ä–∞–≤—å–µ", farmer: "–ü–∞—Å–µ–∫–∞ '–ú–µ–¥–æ–≤—ã–π —Ä–∞–π'", price: 420, weight: "500 –≥", image: "/placeholder.svg" },
    ]
  },
};

const Category = () => {
  const { categoryId } = useParams<{ categoryId: keyof typeof categoryData }>();
  const category = categoryId && categoryData[categoryId];

  // –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
  if (!category) {
    return (
      <div className="flex min-h-screen flex-col">
        <Header />
        <main className="container flex-1 py-12">
          <h1 className="font-playfair text-3xl font-bold text-eco-dark-green">–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h1>
          <p className="mt-4">–ó–∞–ø—Ä–æ—à–µ–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.</p>
        </main>
        <Footer />
      </div>
    );
  }

  return (
    <div className="flex min-h-screen flex-col">
      <Header />
      <main className="flex-1">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
        <div className="bg-eco-light-green py-8">
          <div className="container">
            <div className="flex items-center gap-4">
              <span className="text-4xl">{category.icon}</span>
              <div>
                <h1 className="font-playfair text-3xl font-bold text-eco-dark-green">{category.name}</h1>
                <p className="mt-1 text-eco-brown">{category.description}</p>
              </div>
            </div>
          </div>
        </div>

        <div className="container py-8">
          <div className="flex flex-col gap-8 lg:flex-row">
            {/* –§–∏–ª—å—Ç—Ä—ã —Å–ª–µ–≤–∞ */}
            <div className="lg:w-1/4">
              <div className="rounded-lg border border-border bg-card p-4 shadow-sm">
                <h2 className="font-medium text-eco-dark-green">–§–∏–ª—å—Ç—Ä—ã</h2>
                <Separator className="my-4" />
                
                <div className="space-y-6">
                  {/* –§–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ */}
                  <div>
                    <h3 className="mb-2 text-sm font-medium">–¶–µ–Ω–∞</h3>
                    <div className="space-y-4">
                      <Slider defaultValue={[50, 500]} min={0} max={1000} step={10} />
                      <div className="flex items-center justify-between">
                        <span className="text-xs">–æ—Ç 50 ‚ÇΩ</span>
                        <span className="text-xs">–¥–æ 500 ‚ÇΩ</span>
                      </div>
                    </div>
                  </div>
                  
                  <Separator />
                  
                  {/* –§–∏–ª—å—Ç—Ä –ø–æ —Ñ–µ—Ä–º–µ—Ä–∞–º */}
                  <div>
                    <h3 className="mb-3 text-sm font-medium">–§–µ—Ä–º–µ—Ä—ã</h3>
                    <div className="space-y-2">
                      {Array.from(new Set(category.products.map(p => p.farmer))).map((farmer, i) => (
                        <div key={i} className="flex items-center space-x-2">
                          <Checkbox id={`farmer-${i}`} />
                          <label htmlFor={`farmer-${i}`} className="text-sm">
                            {farmer}
                          </label>
                        </div>
                      ))}
                    </div>
                  </div>
                  
                  <Button className="mt-4 w-full bg-eco-dark-green text-white hover:bg-eco-dark-green/90">
                    –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                  </Button>
                </div>
              </div>
            </div>
            
            {/* –ü—Ä–æ–¥—É–∫—Ç—ã —Å–ø—Ä–∞–≤–∞ */}
            <div className="lg:w-3/4">
              <div className="mb-6 flex items-center justify-between">
                <p className="text-muted-foreground">
                  {category.products.length} —Ç–æ–≤–∞—Ä–æ–≤
                </p>
                <div className="flex items-center gap-2">
                  <span className="text-sm text-muted-foreground">–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å:</span>
                  <Select defaultValue="price-asc">
                    <SelectTrigger className="w-[180px]">
                      <SelectValue placeholder="–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="price-asc">–ü–æ —Ü–µ–Ω–µ (–≤–æ–∑—Ä.)</SelectItem>
                      <SelectItem value="price-desc">–ü–æ —Ü–µ–Ω–µ (—É–±—ã–≤.)</SelectItem>
                      <SelectItem value="name">–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
              </div>
              
              <div className="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
                {category.products.map((product) => (
                  <div key={product.id} className="group rounded-lg border border-border bg-card p-4 transition-all hover:shadow-md">
                    <div className="aspect-square overflow-hidden rounded-md bg-eco-light-green/20">
                      <img 
                        src={product.image} 
                        alt={product.name}
                        className="h-full w-full object-cover object-center transition-transform group-hover:scale-105"
                      />
                    </div>
                    <div className="mt-4">
                      <p className="text-sm text-muted-foreground">{product.farmer}</p>
                      <h3 className="font-medium text-eco-dark-green">{product.name}</h3>
                      <div className="mt-2 flex items-center justify-between">
                        <div>
                          <span className="text-lg font-semibold">{product.price} ‚ÇΩ</span>
                          <span className="ml-1 text-sm text-muted-foreground">/ {product.weight}</span>
                        </div>
                        <Button size="sm" className="bg-eco-dark-green text-white hover:bg-eco-dark-green/90">
                          –í –∫–æ—Ä–∑–∏–Ω—É
                        </Button>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </main>
      <Footer />
    </div>
  );
};

export default Category;
